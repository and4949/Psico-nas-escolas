
/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
// @ts-nocheck 
/*
 * This file exports the `Consulta` model and its related types.
 *
 * ðŸŸ¢ You can import this file directly.
 */
import type * as runtime from "@prisma/client/runtime/library"
import type * as $Enums from "../enums.ts"
import type * as Prisma from "../internal/prismaNamespace.ts"

/**
 * Model Consulta
 * 
 */
export type ConsultaModel = runtime.Types.Result.DefaultSelection<Prisma.$ConsultaPayload>

export type AggregateConsulta = {
  _count: ConsultaCountAggregateOutputType | null
  _avg: ConsultaAvgAggregateOutputType | null
  _sum: ConsultaSumAggregateOutputType | null
  _min: ConsultaMinAggregateOutputType | null
  _max: ConsultaMaxAggregateOutputType | null
}

export type ConsultaAvgAggregateOutputType = {
  id: number | null
  aluno_id: number | null
  psicologo_id: number | null
  horario_id: number | null
  nota: number | null
  status: number | null
}

export type ConsultaSumAggregateOutputType = {
  id: number | null
  aluno_id: number | null
  psicologo_id: number | null
  horario_id: number | null
  nota: number | null
  status: number | null
}

export type ConsultaMinAggregateOutputType = {
  id: number | null
  aluno_id: number | null
  psicologo_id: number | null
  horario_id: number | null
  nota: number | null
  avaliacao: string | null
  status: number | null
}

export type ConsultaMaxAggregateOutputType = {
  id: number | null
  aluno_id: number | null
  psicologo_id: number | null
  horario_id: number | null
  nota: number | null
  avaliacao: string | null
  status: number | null
}

export type ConsultaCountAggregateOutputType = {
  id: number
  aluno_id: number
  psicologo_id: number
  horario_id: number
  nota: number
  avaliacao: number
  status: number
  _all: number
}


export type ConsultaAvgAggregateInputType = {
  id?: true
  aluno_id?: true
  psicologo_id?: true
  horario_id?: true
  nota?: true
  status?: true
}

export type ConsultaSumAggregateInputType = {
  id?: true
  aluno_id?: true
  psicologo_id?: true
  horario_id?: true
  nota?: true
  status?: true
}

export type ConsultaMinAggregateInputType = {
  id?: true
  aluno_id?: true
  psicologo_id?: true
  horario_id?: true
  nota?: true
  avaliacao?: true
  status?: true
}

export type ConsultaMaxAggregateInputType = {
  id?: true
  aluno_id?: true
  psicologo_id?: true
  horario_id?: true
  nota?: true
  avaliacao?: true
  status?: true
}

export type ConsultaCountAggregateInputType = {
  id?: true
  aluno_id?: true
  psicologo_id?: true
  horario_id?: true
  nota?: true
  avaliacao?: true
  status?: true
  _all?: true
}

export type ConsultaAggregateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which Consulta to aggregate.
   */
  where?: Prisma.ConsultaWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of Consultas to fetch.
   */
  orderBy?: Prisma.ConsultaOrderByWithRelationInput | Prisma.ConsultaOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the start position
   */
  cursor?: Prisma.ConsultaWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` Consultas from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` Consultas.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Count returned Consultas
  **/
  _count?: true | ConsultaCountAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to average
  **/
  _avg?: ConsultaAvgAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to sum
  **/
  _sum?: ConsultaSumAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the minimum value
  **/
  _min?: ConsultaMinAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the maximum value
  **/
  _max?: ConsultaMaxAggregateInputType
}

export type GetConsultaAggregateType<T extends ConsultaAggregateArgs> = {
      [P in keyof T & keyof AggregateConsulta]: P extends '_count' | 'count'
    ? T[P] extends true
      ? number
      : Prisma.GetScalarType<T[P], AggregateConsulta[P]>
    : Prisma.GetScalarType<T[P], AggregateConsulta[P]>
}




export type ConsultaGroupByArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.ConsultaWhereInput
  orderBy?: Prisma.ConsultaOrderByWithAggregationInput | Prisma.ConsultaOrderByWithAggregationInput[]
  by: Prisma.ConsultaScalarFieldEnum[] | Prisma.ConsultaScalarFieldEnum
  having?: Prisma.ConsultaScalarWhereWithAggregatesInput
  take?: number
  skip?: number
  _count?: ConsultaCountAggregateInputType | true
  _avg?: ConsultaAvgAggregateInputType
  _sum?: ConsultaSumAggregateInputType
  _min?: ConsultaMinAggregateInputType
  _max?: ConsultaMaxAggregateInputType
}

export type ConsultaGroupByOutputType = {
  id: number
  aluno_id: number | null
  psicologo_id: number
  horario_id: number
  nota: number | null
  avaliacao: string | null
  status: number
  _count: ConsultaCountAggregateOutputType | null
  _avg: ConsultaAvgAggregateOutputType | null
  _sum: ConsultaSumAggregateOutputType | null
  _min: ConsultaMinAggregateOutputType | null
  _max: ConsultaMaxAggregateOutputType | null
}

type GetConsultaGroupByPayload<T extends ConsultaGroupByArgs> = Prisma.PrismaPromise<
  Array<
    Prisma.PickEnumerable<ConsultaGroupByOutputType, T['by']> &
      {
        [P in ((keyof T) & (keyof ConsultaGroupByOutputType))]: P extends '_count'
          ? T[P] extends boolean
            ? number
            : Prisma.GetScalarType<T[P], ConsultaGroupByOutputType[P]>
          : Prisma.GetScalarType<T[P], ConsultaGroupByOutputType[P]>
      }
    >
  >



export type ConsultaWhereInput = {
  AND?: Prisma.ConsultaWhereInput | Prisma.ConsultaWhereInput[]
  OR?: Prisma.ConsultaWhereInput[]
  NOT?: Prisma.ConsultaWhereInput | Prisma.ConsultaWhereInput[]
  id?: Prisma.IntFilter<"Consulta"> | number
  aluno_id?: Prisma.IntNullableFilter<"Consulta"> | number | null
  psicologo_id?: Prisma.IntFilter<"Consulta"> | number
  horario_id?: Prisma.IntFilter<"Consulta"> | number
  nota?: Prisma.IntNullableFilter<"Consulta"> | number | null
  avaliacao?: Prisma.StringNullableFilter<"Consulta"> | string | null
  status?: Prisma.IntFilter<"Consulta"> | number
  aluno?: Prisma.XOR<Prisma.AlunoNullableScalarRelationFilter, Prisma.AlunoWhereInput> | null
  psicologo?: Prisma.XOR<Prisma.PsicologoScalarRelationFilter, Prisma.PsicologoWhereInput>
  horario?: Prisma.XOR<Prisma.HorarioScalarRelationFilter, Prisma.HorarioWhereInput>
}

export type ConsultaOrderByWithRelationInput = {
  id?: Prisma.SortOrder
  aluno_id?: Prisma.SortOrderInput | Prisma.SortOrder
  psicologo_id?: Prisma.SortOrder
  horario_id?: Prisma.SortOrder
  nota?: Prisma.SortOrderInput | Prisma.SortOrder
  avaliacao?: Prisma.SortOrderInput | Prisma.SortOrder
  status?: Prisma.SortOrder
  aluno?: Prisma.AlunoOrderByWithRelationInput
  psicologo?: Prisma.PsicologoOrderByWithRelationInput
  horario?: Prisma.HorarioOrderByWithRelationInput
}

export type ConsultaWhereUniqueInput = Prisma.AtLeast<{
  id?: number
  AND?: Prisma.ConsultaWhereInput | Prisma.ConsultaWhereInput[]
  OR?: Prisma.ConsultaWhereInput[]
  NOT?: Prisma.ConsultaWhereInput | Prisma.ConsultaWhereInput[]
  aluno_id?: Prisma.IntNullableFilter<"Consulta"> | number | null
  psicologo_id?: Prisma.IntFilter<"Consulta"> | number
  horario_id?: Prisma.IntFilter<"Consulta"> | number
  nota?: Prisma.IntNullableFilter<"Consulta"> | number | null
  avaliacao?: Prisma.StringNullableFilter<"Consulta"> | string | null
  status?: Prisma.IntFilter<"Consulta"> | number
  aluno?: Prisma.XOR<Prisma.AlunoNullableScalarRelationFilter, Prisma.AlunoWhereInput> | null
  psicologo?: Prisma.XOR<Prisma.PsicologoScalarRelationFilter, Prisma.PsicologoWhereInput>
  horario?: Prisma.XOR<Prisma.HorarioScalarRelationFilter, Prisma.HorarioWhereInput>
}, "id">

export type ConsultaOrderByWithAggregationInput = {
  id?: Prisma.SortOrder
  aluno_id?: Prisma.SortOrderInput | Prisma.SortOrder
  psicologo_id?: Prisma.SortOrder
  horario_id?: Prisma.SortOrder
  nota?: Prisma.SortOrderInput | Prisma.SortOrder
  avaliacao?: Prisma.SortOrderInput | Prisma.SortOrder
  status?: Prisma.SortOrder
  _count?: Prisma.ConsultaCountOrderByAggregateInput
  _avg?: Prisma.ConsultaAvgOrderByAggregateInput
  _max?: Prisma.ConsultaMaxOrderByAggregateInput
  _min?: Prisma.ConsultaMinOrderByAggregateInput
  _sum?: Prisma.ConsultaSumOrderByAggregateInput
}

export type ConsultaScalarWhereWithAggregatesInput = {
  AND?: Prisma.ConsultaScalarWhereWithAggregatesInput | Prisma.ConsultaScalarWhereWithAggregatesInput[]
  OR?: Prisma.ConsultaScalarWhereWithAggregatesInput[]
  NOT?: Prisma.ConsultaScalarWhereWithAggregatesInput | Prisma.ConsultaScalarWhereWithAggregatesInput[]
  id?: Prisma.IntWithAggregatesFilter<"Consulta"> | number
  aluno_id?: Prisma.IntNullableWithAggregatesFilter<"Consulta"> | number | null
  psicologo_id?: Prisma.IntWithAggregatesFilter<"Consulta"> | number
  horario_id?: Prisma.IntWithAggregatesFilter<"Consulta"> | number
  nota?: Prisma.IntNullableWithAggregatesFilter<"Consulta"> | number | null
  avaliacao?: Prisma.StringNullableWithAggregatesFilter<"Consulta"> | string | null
  status?: Prisma.IntWithAggregatesFilter<"Consulta"> | number
}

export type ConsultaCreateInput = {
  nota?: number | null
  avaliacao?: string | null
  status?: number
  aluno?: Prisma.AlunoCreateNestedOneWithoutConsultaInput
  psicologo: Prisma.PsicologoCreateNestedOneWithoutConsultaInput
  horario: Prisma.HorarioCreateNestedOneWithoutConsultaInput
}

export type ConsultaUncheckedCreateInput = {
  id?: number
  aluno_id?: number | null
  psicologo_id: number
  horario_id: number
  nota?: number | null
  avaliacao?: string | null
  status?: number
}

export type ConsultaUpdateInput = {
  nota?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  avaliacao?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  status?: Prisma.IntFieldUpdateOperationsInput | number
  aluno?: Prisma.AlunoUpdateOneWithoutConsultaNestedInput
  psicologo?: Prisma.PsicologoUpdateOneRequiredWithoutConsultaNestedInput
  horario?: Prisma.HorarioUpdateOneRequiredWithoutConsultaNestedInput
}

export type ConsultaUncheckedUpdateInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  aluno_id?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  psicologo_id?: Prisma.IntFieldUpdateOperationsInput | number
  horario_id?: Prisma.IntFieldUpdateOperationsInput | number
  nota?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  avaliacao?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  status?: Prisma.IntFieldUpdateOperationsInput | number
}

export type ConsultaCreateManyInput = {
  id?: number
  aluno_id?: number | null
  psicologo_id: number
  horario_id: number
  nota?: number | null
  avaliacao?: string | null
  status?: number
}

export type ConsultaUpdateManyMutationInput = {
  nota?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  avaliacao?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  status?: Prisma.IntFieldUpdateOperationsInput | number
}

export type ConsultaUncheckedUpdateManyInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  aluno_id?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  psicologo_id?: Prisma.IntFieldUpdateOperationsInput | number
  horario_id?: Prisma.IntFieldUpdateOperationsInput | number
  nota?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  avaliacao?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  status?: Prisma.IntFieldUpdateOperationsInput | number
}

export type ConsultaListRelationFilter = {
  every?: Prisma.ConsultaWhereInput
  some?: Prisma.ConsultaWhereInput
  none?: Prisma.ConsultaWhereInput
}

export type ConsultaOrderByRelationAggregateInput = {
  _count?: Prisma.SortOrder
}

export type ConsultaCountOrderByAggregateInput = {
  id?: Prisma.SortOrder
  aluno_id?: Prisma.SortOrder
  psicologo_id?: Prisma.SortOrder
  horario_id?: Prisma.SortOrder
  nota?: Prisma.SortOrder
  avaliacao?: Prisma.SortOrder
  status?: Prisma.SortOrder
}

export type ConsultaAvgOrderByAggregateInput = {
  id?: Prisma.SortOrder
  aluno_id?: Prisma.SortOrder
  psicologo_id?: Prisma.SortOrder
  horario_id?: Prisma.SortOrder
  nota?: Prisma.SortOrder
  status?: Prisma.SortOrder
}

export type ConsultaMaxOrderByAggregateInput = {
  id?: Prisma.SortOrder
  aluno_id?: Prisma.SortOrder
  psicologo_id?: Prisma.SortOrder
  horario_id?: Prisma.SortOrder
  nota?: Prisma.SortOrder
  avaliacao?: Prisma.SortOrder
  status?: Prisma.SortOrder
}

export type ConsultaMinOrderByAggregateInput = {
  id?: Prisma.SortOrder
  aluno_id?: Prisma.SortOrder
  psicologo_id?: Prisma.SortOrder
  horario_id?: Prisma.SortOrder
  nota?: Prisma.SortOrder
  avaliacao?: Prisma.SortOrder
  status?: Prisma.SortOrder
}

export type ConsultaSumOrderByAggregateInput = {
  id?: Prisma.SortOrder
  aluno_id?: Prisma.SortOrder
  psicologo_id?: Prisma.SortOrder
  horario_id?: Prisma.SortOrder
  nota?: Prisma.SortOrder
  status?: Prisma.SortOrder
}

export type ConsultaCreateNestedManyWithoutAlunoInput = {
  create?: Prisma.XOR<Prisma.ConsultaCreateWithoutAlunoInput, Prisma.ConsultaUncheckedCreateWithoutAlunoInput> | Prisma.ConsultaCreateWithoutAlunoInput[] | Prisma.ConsultaUncheckedCreateWithoutAlunoInput[]
  connectOrCreate?: Prisma.ConsultaCreateOrConnectWithoutAlunoInput | Prisma.ConsultaCreateOrConnectWithoutAlunoInput[]
  createMany?: Prisma.ConsultaCreateManyAlunoInputEnvelope
  connect?: Prisma.ConsultaWhereUniqueInput | Prisma.ConsultaWhereUniqueInput[]
}

export type ConsultaUncheckedCreateNestedManyWithoutAlunoInput = {
  create?: Prisma.XOR<Prisma.ConsultaCreateWithoutAlunoInput, Prisma.ConsultaUncheckedCreateWithoutAlunoInput> | Prisma.ConsultaCreateWithoutAlunoInput[] | Prisma.ConsultaUncheckedCreateWithoutAlunoInput[]
  connectOrCreate?: Prisma.ConsultaCreateOrConnectWithoutAlunoInput | Prisma.ConsultaCreateOrConnectWithoutAlunoInput[]
  createMany?: Prisma.ConsultaCreateManyAlunoInputEnvelope
  connect?: Prisma.ConsultaWhereUniqueInput | Prisma.ConsultaWhereUniqueInput[]
}

export type ConsultaUpdateManyWithoutAlunoNestedInput = {
  create?: Prisma.XOR<Prisma.ConsultaCreateWithoutAlunoInput, Prisma.ConsultaUncheckedCreateWithoutAlunoInput> | Prisma.ConsultaCreateWithoutAlunoInput[] | Prisma.ConsultaUncheckedCreateWithoutAlunoInput[]
  connectOrCreate?: Prisma.ConsultaCreateOrConnectWithoutAlunoInput | Prisma.ConsultaCreateOrConnectWithoutAlunoInput[]
  upsert?: Prisma.ConsultaUpsertWithWhereUniqueWithoutAlunoInput | Prisma.ConsultaUpsertWithWhereUniqueWithoutAlunoInput[]
  createMany?: Prisma.ConsultaCreateManyAlunoInputEnvelope
  set?: Prisma.ConsultaWhereUniqueInput | Prisma.ConsultaWhereUniqueInput[]
  disconnect?: Prisma.ConsultaWhereUniqueInput | Prisma.ConsultaWhereUniqueInput[]
  delete?: Prisma.ConsultaWhereUniqueInput | Prisma.ConsultaWhereUniqueInput[]
  connect?: Prisma.ConsultaWhereUniqueInput | Prisma.ConsultaWhereUniqueInput[]
  update?: Prisma.ConsultaUpdateWithWhereUniqueWithoutAlunoInput | Prisma.ConsultaUpdateWithWhereUniqueWithoutAlunoInput[]
  updateMany?: Prisma.ConsultaUpdateManyWithWhereWithoutAlunoInput | Prisma.ConsultaUpdateManyWithWhereWithoutAlunoInput[]
  deleteMany?: Prisma.ConsultaScalarWhereInput | Prisma.ConsultaScalarWhereInput[]
}

export type ConsultaUncheckedUpdateManyWithoutAlunoNestedInput = {
  create?: Prisma.XOR<Prisma.ConsultaCreateWithoutAlunoInput, Prisma.ConsultaUncheckedCreateWithoutAlunoInput> | Prisma.ConsultaCreateWithoutAlunoInput[] | Prisma.ConsultaUncheckedCreateWithoutAlunoInput[]
  connectOrCreate?: Prisma.ConsultaCreateOrConnectWithoutAlunoInput | Prisma.ConsultaCreateOrConnectWithoutAlunoInput[]
  upsert?: Prisma.ConsultaUpsertWithWhereUniqueWithoutAlunoInput | Prisma.ConsultaUpsertWithWhereUniqueWithoutAlunoInput[]
  createMany?: Prisma.ConsultaCreateManyAlunoInputEnvelope
  set?: Prisma.ConsultaWhereUniqueInput | Prisma.ConsultaWhereUniqueInput[]
  disconnect?: Prisma.ConsultaWhereUniqueInput | Prisma.ConsultaWhereUniqueInput[]
  delete?: Prisma.ConsultaWhereUniqueInput | Prisma.ConsultaWhereUniqueInput[]
  connect?: Prisma.ConsultaWhereUniqueInput | Prisma.ConsultaWhereUniqueInput[]
  update?: Prisma.ConsultaUpdateWithWhereUniqueWithoutAlunoInput | Prisma.ConsultaUpdateWithWhereUniqueWithoutAlunoInput[]
  updateMany?: Prisma.ConsultaUpdateManyWithWhereWithoutAlunoInput | Prisma.ConsultaUpdateManyWithWhereWithoutAlunoInput[]
  deleteMany?: Prisma.ConsultaScalarWhereInput | Prisma.ConsultaScalarWhereInput[]
}

export type ConsultaCreateNestedManyWithoutPsicologoInput = {
  create?: Prisma.XOR<Prisma.ConsultaCreateWithoutPsicologoInput, Prisma.ConsultaUncheckedCreateWithoutPsicologoInput> | Prisma.ConsultaCreateWithoutPsicologoInput[] | Prisma.ConsultaUncheckedCreateWithoutPsicologoInput[]
  connectOrCreate?: Prisma.ConsultaCreateOrConnectWithoutPsicologoInput | Prisma.ConsultaCreateOrConnectWithoutPsicologoInput[]
  createMany?: Prisma.ConsultaCreateManyPsicologoInputEnvelope
  connect?: Prisma.ConsultaWhereUniqueInput | Prisma.ConsultaWhereUniqueInput[]
}

export type ConsultaUncheckedCreateNestedManyWithoutPsicologoInput = {
  create?: Prisma.XOR<Prisma.ConsultaCreateWithoutPsicologoInput, Prisma.ConsultaUncheckedCreateWithoutPsicologoInput> | Prisma.ConsultaCreateWithoutPsicologoInput[] | Prisma.ConsultaUncheckedCreateWithoutPsicologoInput[]
  connectOrCreate?: Prisma.ConsultaCreateOrConnectWithoutPsicologoInput | Prisma.ConsultaCreateOrConnectWithoutPsicologoInput[]
  createMany?: Prisma.ConsultaCreateManyPsicologoInputEnvelope
  connect?: Prisma.ConsultaWhereUniqueInput | Prisma.ConsultaWhereUniqueInput[]
}

export type ConsultaUpdateManyWithoutPsicologoNestedInput = {
  create?: Prisma.XOR<Prisma.ConsultaCreateWithoutPsicologoInput, Prisma.ConsultaUncheckedCreateWithoutPsicologoInput> | Prisma.ConsultaCreateWithoutPsicologoInput[] | Prisma.ConsultaUncheckedCreateWithoutPsicologoInput[]
  connectOrCreate?: Prisma.ConsultaCreateOrConnectWithoutPsicologoInput | Prisma.ConsultaCreateOrConnectWithoutPsicologoInput[]
  upsert?: Prisma.ConsultaUpsertWithWhereUniqueWithoutPsicologoInput | Prisma.ConsultaUpsertWithWhereUniqueWithoutPsicologoInput[]
  createMany?: Prisma.ConsultaCreateManyPsicologoInputEnvelope
  set?: Prisma.ConsultaWhereUniqueInput | Prisma.ConsultaWhereUniqueInput[]
  disconnect?: Prisma.ConsultaWhereUniqueInput | Prisma.ConsultaWhereUniqueInput[]
  delete?: Prisma.ConsultaWhereUniqueInput | Prisma.ConsultaWhereUniqueInput[]
  connect?: Prisma.ConsultaWhereUniqueInput | Prisma.ConsultaWhereUniqueInput[]
  update?: Prisma.ConsultaUpdateWithWhereUniqueWithoutPsicologoInput | Prisma.ConsultaUpdateWithWhereUniqueWithoutPsicologoInput[]
  updateMany?: Prisma.ConsultaUpdateManyWithWhereWithoutPsicologoInput | Prisma.ConsultaUpdateManyWithWhereWithoutPsicologoInput[]
  deleteMany?: Prisma.ConsultaScalarWhereInput | Prisma.ConsultaScalarWhereInput[]
}

export type ConsultaUncheckedUpdateManyWithoutPsicologoNestedInput = {
  create?: Prisma.XOR<Prisma.ConsultaCreateWithoutPsicologoInput, Prisma.ConsultaUncheckedCreateWithoutPsicologoInput> | Prisma.ConsultaCreateWithoutPsicologoInput[] | Prisma.ConsultaUncheckedCreateWithoutPsicologoInput[]
  connectOrCreate?: Prisma.ConsultaCreateOrConnectWithoutPsicologoInput | Prisma.ConsultaCreateOrConnectWithoutPsicologoInput[]
  upsert?: Prisma.ConsultaUpsertWithWhereUniqueWithoutPsicologoInput | Prisma.ConsultaUpsertWithWhereUniqueWithoutPsicologoInput[]
  createMany?: Prisma.ConsultaCreateManyPsicologoInputEnvelope
  set?: Prisma.ConsultaWhereUniqueInput | Prisma.ConsultaWhereUniqueInput[]
  disconnect?: Prisma.ConsultaWhereUniqueInput | Prisma.ConsultaWhereUniqueInput[]
  delete?: Prisma.ConsultaWhereUniqueInput | Prisma.ConsultaWhereUniqueInput[]
  connect?: Prisma.ConsultaWhereUniqueInput | Prisma.ConsultaWhereUniqueInput[]
  update?: Prisma.ConsultaUpdateWithWhereUniqueWithoutPsicologoInput | Prisma.ConsultaUpdateWithWhereUniqueWithoutPsicologoInput[]
  updateMany?: Prisma.ConsultaUpdateManyWithWhereWithoutPsicologoInput | Prisma.ConsultaUpdateManyWithWhereWithoutPsicologoInput[]
  deleteMany?: Prisma.ConsultaScalarWhereInput | Prisma.ConsultaScalarWhereInput[]
}

export type ConsultaCreateNestedManyWithoutHorarioInput = {
  create?: Prisma.XOR<Prisma.ConsultaCreateWithoutHorarioInput, Prisma.ConsultaUncheckedCreateWithoutHorarioInput> | Prisma.ConsultaCreateWithoutHorarioInput[] | Prisma.ConsultaUncheckedCreateWithoutHorarioInput[]
  connectOrCreate?: Prisma.ConsultaCreateOrConnectWithoutHorarioInput | Prisma.ConsultaCreateOrConnectWithoutHorarioInput[]
  createMany?: Prisma.ConsultaCreateManyHorarioInputEnvelope
  connect?: Prisma.ConsultaWhereUniqueInput | Prisma.ConsultaWhereUniqueInput[]
}

export type ConsultaUncheckedCreateNestedManyWithoutHorarioInput = {
  create?: Prisma.XOR<Prisma.ConsultaCreateWithoutHorarioInput, Prisma.ConsultaUncheckedCreateWithoutHorarioInput> | Prisma.ConsultaCreateWithoutHorarioInput[] | Prisma.ConsultaUncheckedCreateWithoutHorarioInput[]
  connectOrCreate?: Prisma.ConsultaCreateOrConnectWithoutHorarioInput | Prisma.ConsultaCreateOrConnectWithoutHorarioInput[]
  createMany?: Prisma.ConsultaCreateManyHorarioInputEnvelope
  connect?: Prisma.ConsultaWhereUniqueInput | Prisma.ConsultaWhereUniqueInput[]
}

export type ConsultaUpdateManyWithoutHorarioNestedInput = {
  create?: Prisma.XOR<Prisma.ConsultaCreateWithoutHorarioInput, Prisma.ConsultaUncheckedCreateWithoutHorarioInput> | Prisma.ConsultaCreateWithoutHorarioInput[] | Prisma.ConsultaUncheckedCreateWithoutHorarioInput[]
  connectOrCreate?: Prisma.ConsultaCreateOrConnectWithoutHorarioInput | Prisma.ConsultaCreateOrConnectWithoutHorarioInput[]
  upsert?: Prisma.ConsultaUpsertWithWhereUniqueWithoutHorarioInput | Prisma.ConsultaUpsertWithWhereUniqueWithoutHorarioInput[]
  createMany?: Prisma.ConsultaCreateManyHorarioInputEnvelope
  set?: Prisma.ConsultaWhereUniqueInput | Prisma.ConsultaWhereUniqueInput[]
  disconnect?: Prisma.ConsultaWhereUniqueInput | Prisma.ConsultaWhereUniqueInput[]
  delete?: Prisma.ConsultaWhereUniqueInput | Prisma.ConsultaWhereUniqueInput[]
  connect?: Prisma.ConsultaWhereUniqueInput | Prisma.ConsultaWhereUniqueInput[]
  update?: Prisma.ConsultaUpdateWithWhereUniqueWithoutHorarioInput | Prisma.ConsultaUpdateWithWhereUniqueWithoutHorarioInput[]
  updateMany?: Prisma.ConsultaUpdateManyWithWhereWithoutHorarioInput | Prisma.ConsultaUpdateManyWithWhereWithoutHorarioInput[]
  deleteMany?: Prisma.ConsultaScalarWhereInput | Prisma.ConsultaScalarWhereInput[]
}

export type ConsultaUncheckedUpdateManyWithoutHorarioNestedInput = {
  create?: Prisma.XOR<Prisma.ConsultaCreateWithoutHorarioInput, Prisma.ConsultaUncheckedCreateWithoutHorarioInput> | Prisma.ConsultaCreateWithoutHorarioInput[] | Prisma.ConsultaUncheckedCreateWithoutHorarioInput[]
  connectOrCreate?: Prisma.ConsultaCreateOrConnectWithoutHorarioInput | Prisma.ConsultaCreateOrConnectWithoutHorarioInput[]
  upsert?: Prisma.ConsultaUpsertWithWhereUniqueWithoutHorarioInput | Prisma.ConsultaUpsertWithWhereUniqueWithoutHorarioInput[]
  createMany?: Prisma.ConsultaCreateManyHorarioInputEnvelope
  set?: Prisma.ConsultaWhereUniqueInput | Prisma.ConsultaWhereUniqueInput[]
  disconnect?: Prisma.ConsultaWhereUniqueInput | Prisma.ConsultaWhereUniqueInput[]
  delete?: Prisma.ConsultaWhereUniqueInput | Prisma.ConsultaWhereUniqueInput[]
  connect?: Prisma.ConsultaWhereUniqueInput | Prisma.ConsultaWhereUniqueInput[]
  update?: Prisma.ConsultaUpdateWithWhereUniqueWithoutHorarioInput | Prisma.ConsultaUpdateWithWhereUniqueWithoutHorarioInput[]
  updateMany?: Prisma.ConsultaUpdateManyWithWhereWithoutHorarioInput | Prisma.ConsultaUpdateManyWithWhereWithoutHorarioInput[]
  deleteMany?: Prisma.ConsultaScalarWhereInput | Prisma.ConsultaScalarWhereInput[]
}

export type NullableIntFieldUpdateOperationsInput = {
  set?: number | null
  increment?: number
  decrement?: number
  multiply?: number
  divide?: number
}

export type NullableStringFieldUpdateOperationsInput = {
  set?: string | null
}

export type ConsultaCreateWithoutAlunoInput = {
  nota?: number | null
  avaliacao?: string | null
  status?: number
  psicologo: Prisma.PsicologoCreateNestedOneWithoutConsultaInput
  horario: Prisma.HorarioCreateNestedOneWithoutConsultaInput
}

export type ConsultaUncheckedCreateWithoutAlunoInput = {
  id?: number
  psicologo_id: number
  horario_id: number
  nota?: number | null
  avaliacao?: string | null
  status?: number
}

export type ConsultaCreateOrConnectWithoutAlunoInput = {
  where: Prisma.ConsultaWhereUniqueInput
  create: Prisma.XOR<Prisma.ConsultaCreateWithoutAlunoInput, Prisma.ConsultaUncheckedCreateWithoutAlunoInput>
}

export type ConsultaCreateManyAlunoInputEnvelope = {
  data: Prisma.ConsultaCreateManyAlunoInput | Prisma.ConsultaCreateManyAlunoInput[]
}

export type ConsultaUpsertWithWhereUniqueWithoutAlunoInput = {
  where: Prisma.ConsultaWhereUniqueInput
  update: Prisma.XOR<Prisma.ConsultaUpdateWithoutAlunoInput, Prisma.ConsultaUncheckedUpdateWithoutAlunoInput>
  create: Prisma.XOR<Prisma.ConsultaCreateWithoutAlunoInput, Prisma.ConsultaUncheckedCreateWithoutAlunoInput>
}

export type ConsultaUpdateWithWhereUniqueWithoutAlunoInput = {
  where: Prisma.ConsultaWhereUniqueInput
  data: Prisma.XOR<Prisma.ConsultaUpdateWithoutAlunoInput, Prisma.ConsultaUncheckedUpdateWithoutAlunoInput>
}

export type ConsultaUpdateManyWithWhereWithoutAlunoInput = {
  where: Prisma.ConsultaScalarWhereInput
  data: Prisma.XOR<Prisma.ConsultaUpdateManyMutationInput, Prisma.ConsultaUncheckedUpdateManyWithoutAlunoInput>
}

export type ConsultaScalarWhereInput = {
  AND?: Prisma.ConsultaScalarWhereInput | Prisma.ConsultaScalarWhereInput[]
  OR?: Prisma.ConsultaScalarWhereInput[]
  NOT?: Prisma.ConsultaScalarWhereInput | Prisma.ConsultaScalarWhereInput[]
  id?: Prisma.IntFilter<"Consulta"> | number
  aluno_id?: Prisma.IntNullableFilter<"Consulta"> | number | null
  psicologo_id?: Prisma.IntFilter<"Consulta"> | number
  horario_id?: Prisma.IntFilter<"Consulta"> | number
  nota?: Prisma.IntNullableFilter<"Consulta"> | number | null
  avaliacao?: Prisma.StringNullableFilter<"Consulta"> | string | null
  status?: Prisma.IntFilter<"Consulta"> | number
}

export type ConsultaCreateWithoutPsicologoInput = {
  nota?: number | null
  avaliacao?: string | null
  status?: number
  aluno?: Prisma.AlunoCreateNestedOneWithoutConsultaInput
  horario: Prisma.HorarioCreateNestedOneWithoutConsultaInput
}

export type ConsultaUncheckedCreateWithoutPsicologoInput = {
  id?: number
  aluno_id?: number | null
  horario_id: number
  nota?: number | null
  avaliacao?: string | null
  status?: number
}

export type ConsultaCreateOrConnectWithoutPsicologoInput = {
  where: Prisma.ConsultaWhereUniqueInput
  create: Prisma.XOR<Prisma.ConsultaCreateWithoutPsicologoInput, Prisma.ConsultaUncheckedCreateWithoutPsicologoInput>
}

export type ConsultaCreateManyPsicologoInputEnvelope = {
  data: Prisma.ConsultaCreateManyPsicologoInput | Prisma.ConsultaCreateManyPsicologoInput[]
}

export type ConsultaUpsertWithWhereUniqueWithoutPsicologoInput = {
  where: Prisma.ConsultaWhereUniqueInput
  update: Prisma.XOR<Prisma.ConsultaUpdateWithoutPsicologoInput, Prisma.ConsultaUncheckedUpdateWithoutPsicologoInput>
  create: Prisma.XOR<Prisma.ConsultaCreateWithoutPsicologoInput, Prisma.ConsultaUncheckedCreateWithoutPsicologoInput>
}

export type ConsultaUpdateWithWhereUniqueWithoutPsicologoInput = {
  where: Prisma.ConsultaWhereUniqueInput
  data: Prisma.XOR<Prisma.ConsultaUpdateWithoutPsicologoInput, Prisma.ConsultaUncheckedUpdateWithoutPsicologoInput>
}

export type ConsultaUpdateManyWithWhereWithoutPsicologoInput = {
  where: Prisma.ConsultaScalarWhereInput
  data: Prisma.XOR<Prisma.ConsultaUpdateManyMutationInput, Prisma.ConsultaUncheckedUpdateManyWithoutPsicologoInput>
}

export type ConsultaCreateWithoutHorarioInput = {
  nota?: number | null
  avaliacao?: string | null
  status?: number
  aluno?: Prisma.AlunoCreateNestedOneWithoutConsultaInput
  psicologo: Prisma.PsicologoCreateNestedOneWithoutConsultaInput
}

export type ConsultaUncheckedCreateWithoutHorarioInput = {
  id?: number
  aluno_id?: number | null
  psicologo_id: number
  nota?: number | null
  avaliacao?: string | null
  status?: number
}

export type ConsultaCreateOrConnectWithoutHorarioInput = {
  where: Prisma.ConsultaWhereUniqueInput
  create: Prisma.XOR<Prisma.ConsultaCreateWithoutHorarioInput, Prisma.ConsultaUncheckedCreateWithoutHorarioInput>
}

export type ConsultaCreateManyHorarioInputEnvelope = {
  data: Prisma.ConsultaCreateManyHorarioInput | Prisma.ConsultaCreateManyHorarioInput[]
}

export type ConsultaUpsertWithWhereUniqueWithoutHorarioInput = {
  where: Prisma.ConsultaWhereUniqueInput
  update: Prisma.XOR<Prisma.ConsultaUpdateWithoutHorarioInput, Prisma.ConsultaUncheckedUpdateWithoutHorarioInput>
  create: Prisma.XOR<Prisma.ConsultaCreateWithoutHorarioInput, Prisma.ConsultaUncheckedCreateWithoutHorarioInput>
}

export type ConsultaUpdateWithWhereUniqueWithoutHorarioInput = {
  where: Prisma.ConsultaWhereUniqueInput
  data: Prisma.XOR<Prisma.ConsultaUpdateWithoutHorarioInput, Prisma.ConsultaUncheckedUpdateWithoutHorarioInput>
}

export type ConsultaUpdateManyWithWhereWithoutHorarioInput = {
  where: Prisma.ConsultaScalarWhereInput
  data: Prisma.XOR<Prisma.ConsultaUpdateManyMutationInput, Prisma.ConsultaUncheckedUpdateManyWithoutHorarioInput>
}

export type ConsultaCreateManyAlunoInput = {
  id?: number
  psicologo_id: number
  horario_id: number
  nota?: number | null
  avaliacao?: string | null
  status?: number
}

export type ConsultaUpdateWithoutAlunoInput = {
  nota?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  avaliacao?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  status?: Prisma.IntFieldUpdateOperationsInput | number
  psicologo?: Prisma.PsicologoUpdateOneRequiredWithoutConsultaNestedInput
  horario?: Prisma.HorarioUpdateOneRequiredWithoutConsultaNestedInput
}

export type ConsultaUncheckedUpdateWithoutAlunoInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  psicologo_id?: Prisma.IntFieldUpdateOperationsInput | number
  horario_id?: Prisma.IntFieldUpdateOperationsInput | number
  nota?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  avaliacao?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  status?: Prisma.IntFieldUpdateOperationsInput | number
}

export type ConsultaUncheckedUpdateManyWithoutAlunoInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  psicologo_id?: Prisma.IntFieldUpdateOperationsInput | number
  horario_id?: Prisma.IntFieldUpdateOperationsInput | number
  nota?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  avaliacao?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  status?: Prisma.IntFieldUpdateOperationsInput | number
}

export type ConsultaCreateManyPsicologoInput = {
  id?: number
  aluno_id?: number | null
  horario_id: number
  nota?: number | null
  avaliacao?: string | null
  status?: number
}

export type ConsultaUpdateWithoutPsicologoInput = {
  nota?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  avaliacao?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  status?: Prisma.IntFieldUpdateOperationsInput | number
  aluno?: Prisma.AlunoUpdateOneWithoutConsultaNestedInput
  horario?: Prisma.HorarioUpdateOneRequiredWithoutConsultaNestedInput
}

export type ConsultaUncheckedUpdateWithoutPsicologoInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  aluno_id?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  horario_id?: Prisma.IntFieldUpdateOperationsInput | number
  nota?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  avaliacao?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  status?: Prisma.IntFieldUpdateOperationsInput | number
}

export type ConsultaUncheckedUpdateManyWithoutPsicologoInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  aluno_id?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  horario_id?: Prisma.IntFieldUpdateOperationsInput | number
  nota?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  avaliacao?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  status?: Prisma.IntFieldUpdateOperationsInput | number
}

export type ConsultaCreateManyHorarioInput = {
  id?: number
  aluno_id?: number | null
  psicologo_id: number
  nota?: number | null
  avaliacao?: string | null
  status?: number
}

export type ConsultaUpdateWithoutHorarioInput = {
  nota?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  avaliacao?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  status?: Prisma.IntFieldUpdateOperationsInput | number
  aluno?: Prisma.AlunoUpdateOneWithoutConsultaNestedInput
  psicologo?: Prisma.PsicologoUpdateOneRequiredWithoutConsultaNestedInput
}

export type ConsultaUncheckedUpdateWithoutHorarioInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  aluno_id?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  psicologo_id?: Prisma.IntFieldUpdateOperationsInput | number
  nota?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  avaliacao?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  status?: Prisma.IntFieldUpdateOperationsInput | number
}

export type ConsultaUncheckedUpdateManyWithoutHorarioInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  aluno_id?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  psicologo_id?: Prisma.IntFieldUpdateOperationsInput | number
  nota?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  avaliacao?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  status?: Prisma.IntFieldUpdateOperationsInput | number
}



export type ConsultaSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  aluno_id?: boolean
  psicologo_id?: boolean
  horario_id?: boolean
  nota?: boolean
  avaliacao?: boolean
  status?: boolean
  aluno?: boolean | Prisma.Consulta$alunoArgs<ExtArgs>
  psicologo?: boolean | Prisma.PsicologoDefaultArgs<ExtArgs>
  horario?: boolean | Prisma.HorarioDefaultArgs<ExtArgs>
}, ExtArgs["result"]["consulta"]>

export type ConsultaSelectCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  aluno_id?: boolean
  psicologo_id?: boolean
  horario_id?: boolean
  nota?: boolean
  avaliacao?: boolean
  status?: boolean
  aluno?: boolean | Prisma.Consulta$alunoArgs<ExtArgs>
  psicologo?: boolean | Prisma.PsicologoDefaultArgs<ExtArgs>
  horario?: boolean | Prisma.HorarioDefaultArgs<ExtArgs>
}, ExtArgs["result"]["consulta"]>

export type ConsultaSelectUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  aluno_id?: boolean
  psicologo_id?: boolean
  horario_id?: boolean
  nota?: boolean
  avaliacao?: boolean
  status?: boolean
  aluno?: boolean | Prisma.Consulta$alunoArgs<ExtArgs>
  psicologo?: boolean | Prisma.PsicologoDefaultArgs<ExtArgs>
  horario?: boolean | Prisma.HorarioDefaultArgs<ExtArgs>
}, ExtArgs["result"]["consulta"]>

export type ConsultaSelectScalar = {
  id?: boolean
  aluno_id?: boolean
  psicologo_id?: boolean
  horario_id?: boolean
  nota?: boolean
  avaliacao?: boolean
  status?: boolean
}

export type ConsultaOmit<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetOmit<"id" | "aluno_id" | "psicologo_id" | "horario_id" | "nota" | "avaliacao" | "status", ExtArgs["result"]["consulta"]>
export type ConsultaInclude<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  aluno?: boolean | Prisma.Consulta$alunoArgs<ExtArgs>
  psicologo?: boolean | Prisma.PsicologoDefaultArgs<ExtArgs>
  horario?: boolean | Prisma.HorarioDefaultArgs<ExtArgs>
}
export type ConsultaIncludeCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  aluno?: boolean | Prisma.Consulta$alunoArgs<ExtArgs>
  psicologo?: boolean | Prisma.PsicologoDefaultArgs<ExtArgs>
  horario?: boolean | Prisma.HorarioDefaultArgs<ExtArgs>
}
export type ConsultaIncludeUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  aluno?: boolean | Prisma.Consulta$alunoArgs<ExtArgs>
  psicologo?: boolean | Prisma.PsicologoDefaultArgs<ExtArgs>
  horario?: boolean | Prisma.HorarioDefaultArgs<ExtArgs>
}

export type $ConsultaPayload<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  name: "Consulta"
  objects: {
    aluno: Prisma.$AlunoPayload<ExtArgs> | null
    psicologo: Prisma.$PsicologoPayload<ExtArgs>
    horario: Prisma.$HorarioPayload<ExtArgs>
  }
  scalars: runtime.Types.Extensions.GetPayloadResult<{
    id: number
    aluno_id: number | null
    psicologo_id: number
    horario_id: number
    nota: number | null
    avaliacao: string | null
    status: number
  }, ExtArgs["result"]["consulta"]>
  composites: {}
}

export type ConsultaGetPayload<S extends boolean | null | undefined | ConsultaDefaultArgs> = runtime.Types.Result.GetResult<Prisma.$ConsultaPayload, S>

export type ConsultaCountArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> =
  Omit<ConsultaFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
    select?: ConsultaCountAggregateInputType | true
  }

export interface ConsultaDelegate<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Consulta'], meta: { name: 'Consulta' } }
  /**
   * Find zero or one Consulta that matches the filter.
   * @param {ConsultaFindUniqueArgs} args - Arguments to find a Consulta
   * @example
   * // Get one Consulta
   * const consulta = await prisma.consulta.findUnique({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUnique<T extends ConsultaFindUniqueArgs>(args: Prisma.SelectSubset<T, ConsultaFindUniqueArgs<ExtArgs>>): Prisma.Prisma__ConsultaClient<runtime.Types.Result.GetResult<Prisma.$ConsultaPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find one Consulta that matches the filter or throw an error with `error.code='P2025'`
   * if no matches were found.
   * @param {ConsultaFindUniqueOrThrowArgs} args - Arguments to find a Consulta
   * @example
   * // Get one Consulta
   * const consulta = await prisma.consulta.findUniqueOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUniqueOrThrow<T extends ConsultaFindUniqueOrThrowArgs>(args: Prisma.SelectSubset<T, ConsultaFindUniqueOrThrowArgs<ExtArgs>>): Prisma.Prisma__ConsultaClient<runtime.Types.Result.GetResult<Prisma.$ConsultaPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first Consulta that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ConsultaFindFirstArgs} args - Arguments to find a Consulta
   * @example
   * // Get one Consulta
   * const consulta = await prisma.consulta.findFirst({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirst<T extends ConsultaFindFirstArgs>(args?: Prisma.SelectSubset<T, ConsultaFindFirstArgs<ExtArgs>>): Prisma.Prisma__ConsultaClient<runtime.Types.Result.GetResult<Prisma.$ConsultaPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first Consulta that matches the filter or
   * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ConsultaFindFirstOrThrowArgs} args - Arguments to find a Consulta
   * @example
   * // Get one Consulta
   * const consulta = await prisma.consulta.findFirstOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirstOrThrow<T extends ConsultaFindFirstOrThrowArgs>(args?: Prisma.SelectSubset<T, ConsultaFindFirstOrThrowArgs<ExtArgs>>): Prisma.Prisma__ConsultaClient<runtime.Types.Result.GetResult<Prisma.$ConsultaPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find zero or more Consultas that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ConsultaFindManyArgs} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all Consultas
   * const consultas = await prisma.consulta.findMany()
   * 
   * // Get first 10 Consultas
   * const consultas = await prisma.consulta.findMany({ take: 10 })
   * 
   * // Only select the `id`
   * const consultaWithIdOnly = await prisma.consulta.findMany({ select: { id: true } })
   * 
   */
  findMany<T extends ConsultaFindManyArgs>(args?: Prisma.SelectSubset<T, ConsultaFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$ConsultaPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

  /**
   * Create a Consulta.
   * @param {ConsultaCreateArgs} args - Arguments to create a Consulta.
   * @example
   * // Create one Consulta
   * const Consulta = await prisma.consulta.create({
   *   data: {
   *     // ... data to create a Consulta
   *   }
   * })
   * 
   */
  create<T extends ConsultaCreateArgs>(args: Prisma.SelectSubset<T, ConsultaCreateArgs<ExtArgs>>): Prisma.Prisma__ConsultaClient<runtime.Types.Result.GetResult<Prisma.$ConsultaPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Create many Consultas.
   * @param {ConsultaCreateManyArgs} args - Arguments to create many Consultas.
   * @example
   * // Create many Consultas
   * const consulta = await prisma.consulta.createMany({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *     
   */
  createMany<T extends ConsultaCreateManyArgs>(args?: Prisma.SelectSubset<T, ConsultaCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Create many Consultas and returns the data saved in the database.
   * @param {ConsultaCreateManyAndReturnArgs} args - Arguments to create many Consultas.
   * @example
   * // Create many Consultas
   * const consulta = await prisma.consulta.createManyAndReturn({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Create many Consultas and only return the `id`
   * const consultaWithIdOnly = await prisma.consulta.createManyAndReturn({
   *   select: { id: true },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  createManyAndReturn<T extends ConsultaCreateManyAndReturnArgs>(args?: Prisma.SelectSubset<T, ConsultaCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$ConsultaPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

  /**
   * Delete a Consulta.
   * @param {ConsultaDeleteArgs} args - Arguments to delete one Consulta.
   * @example
   * // Delete one Consulta
   * const Consulta = await prisma.consulta.delete({
   *   where: {
   *     // ... filter to delete one Consulta
   *   }
   * })
   * 
   */
  delete<T extends ConsultaDeleteArgs>(args: Prisma.SelectSubset<T, ConsultaDeleteArgs<ExtArgs>>): Prisma.Prisma__ConsultaClient<runtime.Types.Result.GetResult<Prisma.$ConsultaPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Update one Consulta.
   * @param {ConsultaUpdateArgs} args - Arguments to update one Consulta.
   * @example
   * // Update one Consulta
   * const consulta = await prisma.consulta.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  update<T extends ConsultaUpdateArgs>(args: Prisma.SelectSubset<T, ConsultaUpdateArgs<ExtArgs>>): Prisma.Prisma__ConsultaClient<runtime.Types.Result.GetResult<Prisma.$ConsultaPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Delete zero or more Consultas.
   * @param {ConsultaDeleteManyArgs} args - Arguments to filter Consultas to delete.
   * @example
   * // Delete a few Consultas
   * const { count } = await prisma.consulta.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   * 
   */
  deleteMany<T extends ConsultaDeleteManyArgs>(args?: Prisma.SelectSubset<T, ConsultaDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more Consultas.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ConsultaUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many Consultas
   * const consulta = await prisma.consulta.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  updateMany<T extends ConsultaUpdateManyArgs>(args: Prisma.SelectSubset<T, ConsultaUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more Consultas and returns the data updated in the database.
   * @param {ConsultaUpdateManyAndReturnArgs} args - Arguments to update many Consultas.
   * @example
   * // Update many Consultas
   * const consulta = await prisma.consulta.updateManyAndReturn({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Update zero or more Consultas and only return the `id`
   * const consultaWithIdOnly = await prisma.consulta.updateManyAndReturn({
   *   select: { id: true },
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  updateManyAndReturn<T extends ConsultaUpdateManyAndReturnArgs>(args: Prisma.SelectSubset<T, ConsultaUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$ConsultaPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

  /**
   * Create or update one Consulta.
   * @param {ConsultaUpsertArgs} args - Arguments to update or create a Consulta.
   * @example
   * // Update or create a Consulta
   * const consulta = await prisma.consulta.upsert({
   *   create: {
   *     // ... data to create a Consulta
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the Consulta we want to update
   *   }
   * })
   */
  upsert<T extends ConsultaUpsertArgs>(args: Prisma.SelectSubset<T, ConsultaUpsertArgs<ExtArgs>>): Prisma.Prisma__ConsultaClient<runtime.Types.Result.GetResult<Prisma.$ConsultaPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


  /**
   * Count the number of Consultas.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ConsultaCountArgs} args - Arguments to filter Consultas to count.
   * @example
   * // Count the number of Consultas
   * const count = await prisma.consulta.count({
   *   where: {
   *     // ... the filter for the Consultas we want to count
   *   }
   * })
  **/
  count<T extends ConsultaCountArgs>(
    args?: Prisma.Subset<T, ConsultaCountArgs>,
  ): Prisma.PrismaPromise<
    T extends runtime.Types.Utils.Record<'select', any>
      ? T['select'] extends true
        ? number
        : Prisma.GetScalarType<T['select'], ConsultaCountAggregateOutputType>
      : number
  >

  /**
   * Allows you to perform aggregations operations on a Consulta.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ConsultaAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
   * @example
   * // Ordered by age ascending
   * // Where email contains prisma.io
   * // Limited to the 10 users
   * const aggregations = await prisma.user.aggregate({
   *   _avg: {
   *     age: true,
   *   },
   *   where: {
   *     email: {
   *       contains: "prisma.io",
   *     },
   *   },
   *   orderBy: {
   *     age: "asc",
   *   },
   *   take: 10,
   * })
  **/
  aggregate<T extends ConsultaAggregateArgs>(args: Prisma.Subset<T, ConsultaAggregateArgs>): Prisma.PrismaPromise<GetConsultaAggregateType<T>>

  /**
   * Group by Consulta.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ConsultaGroupByArgs} args - Group by arguments.
   * @example
   * // Group by city, order by createdAt, get count
   * const result = await prisma.user.groupBy({
   *   by: ['city', 'createdAt'],
   *   orderBy: {
   *     createdAt: true
   *   },
   *   _count: {
   *     _all: true
   *   },
   * })
   * 
  **/
  groupBy<
    T extends ConsultaGroupByArgs,
    HasSelectOrTake extends Prisma.Or<
      Prisma.Extends<'skip', Prisma.Keys<T>>,
      Prisma.Extends<'take', Prisma.Keys<T>>
    >,
    OrderByArg extends Prisma.True extends HasSelectOrTake
      ? { orderBy: ConsultaGroupByArgs['orderBy'] }
      : { orderBy?: ConsultaGroupByArgs['orderBy'] },
    OrderFields extends Prisma.ExcludeUnderscoreKeys<Prisma.Keys<Prisma.MaybeTupleToUnion<T['orderBy']>>>,
    ByFields extends Prisma.MaybeTupleToUnion<T['by']>,
    ByValid extends Prisma.Has<ByFields, OrderFields>,
    HavingFields extends Prisma.GetHavingFields<T['having']>,
    HavingValid extends Prisma.Has<ByFields, HavingFields>,
    ByEmpty extends T['by'] extends never[] ? Prisma.True : Prisma.False,
    InputErrors extends ByEmpty extends Prisma.True
    ? `Error: "by" must not be empty.`
    : HavingValid extends Prisma.False
    ? {
        [P in HavingFields]: P extends ByFields
          ? never
          : P extends string
          ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
          : [
              Error,
              'Field ',
              P,
              ` in "having" needs to be provided in "by"`,
            ]
      }[HavingFields]
    : 'take' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "take", you also need to provide "orderBy"'
    : 'skip' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "skip", you also need to provide "orderBy"'
    : ByValid extends Prisma.True
    ? {}
    : {
        [P in OrderFields]: P extends ByFields
          ? never
          : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
      }[OrderFields]
  >(args: Prisma.SubsetIntersection<T, ConsultaGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetConsultaGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
/**
 * Fields of the Consulta model
 */
readonly fields: ConsultaFieldRefs;
}

/**
 * The delegate class that acts as a "Promise-like" for Consulta.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export interface Prisma__ConsultaClient<T, Null = never, ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
  readonly [Symbol.toStringTag]: "PrismaPromise"
  aluno<T extends Prisma.Consulta$alunoArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.Consulta$alunoArgs<ExtArgs>>): Prisma.Prisma__AlunoClient<runtime.Types.Result.GetResult<Prisma.$AlunoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
  psicologo<T extends Prisma.PsicologoDefaultArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.PsicologoDefaultArgs<ExtArgs>>): Prisma.Prisma__PsicologoClient<runtime.Types.Result.GetResult<Prisma.$PsicologoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
  horario<T extends Prisma.HorarioDefaultArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.HorarioDefaultArgs<ExtArgs>>): Prisma.Prisma__HorarioClient<runtime.Types.Result.GetResult<Prisma.$HorarioPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): runtime.Types.Utils.JsPromise<TResult1 | TResult2>
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): runtime.Types.Utils.JsPromise<T | TResult>
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): runtime.Types.Utils.JsPromise<T>
}




/**
 * Fields of the Consulta model
 */
export interface ConsultaFieldRefs {
  readonly id: Prisma.FieldRef<"Consulta", 'Int'>
  readonly aluno_id: Prisma.FieldRef<"Consulta", 'Int'>
  readonly psicologo_id: Prisma.FieldRef<"Consulta", 'Int'>
  readonly horario_id: Prisma.FieldRef<"Consulta", 'Int'>
  readonly nota: Prisma.FieldRef<"Consulta", 'Int'>
  readonly avaliacao: Prisma.FieldRef<"Consulta", 'String'>
  readonly status: Prisma.FieldRef<"Consulta", 'Int'>
}
    

// Custom InputTypes
/**
 * Consulta findUnique
 */
export type ConsultaFindUniqueArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Consulta
   */
  select?: Prisma.ConsultaSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Consulta
   */
  omit?: Prisma.ConsultaOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ConsultaInclude<ExtArgs> | null
  /**
   * Filter, which Consulta to fetch.
   */
  where: Prisma.ConsultaWhereUniqueInput
}

/**
 * Consulta findUniqueOrThrow
 */
export type ConsultaFindUniqueOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Consulta
   */
  select?: Prisma.ConsultaSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Consulta
   */
  omit?: Prisma.ConsultaOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ConsultaInclude<ExtArgs> | null
  /**
   * Filter, which Consulta to fetch.
   */
  where: Prisma.ConsultaWhereUniqueInput
}

/**
 * Consulta findFirst
 */
export type ConsultaFindFirstArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Consulta
   */
  select?: Prisma.ConsultaSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Consulta
   */
  omit?: Prisma.ConsultaOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ConsultaInclude<ExtArgs> | null
  /**
   * Filter, which Consulta to fetch.
   */
  where?: Prisma.ConsultaWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of Consultas to fetch.
   */
  orderBy?: Prisma.ConsultaOrderByWithRelationInput | Prisma.ConsultaOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for Consultas.
   */
  cursor?: Prisma.ConsultaWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` Consultas from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` Consultas.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of Consultas.
   */
  distinct?: Prisma.ConsultaScalarFieldEnum | Prisma.ConsultaScalarFieldEnum[]
}

/**
 * Consulta findFirstOrThrow
 */
export type ConsultaFindFirstOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Consulta
   */
  select?: Prisma.ConsultaSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Consulta
   */
  omit?: Prisma.ConsultaOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ConsultaInclude<ExtArgs> | null
  /**
   * Filter, which Consulta to fetch.
   */
  where?: Prisma.ConsultaWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of Consultas to fetch.
   */
  orderBy?: Prisma.ConsultaOrderByWithRelationInput | Prisma.ConsultaOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for Consultas.
   */
  cursor?: Prisma.ConsultaWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` Consultas from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` Consultas.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of Consultas.
   */
  distinct?: Prisma.ConsultaScalarFieldEnum | Prisma.ConsultaScalarFieldEnum[]
}

/**
 * Consulta findMany
 */
export type ConsultaFindManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Consulta
   */
  select?: Prisma.ConsultaSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Consulta
   */
  omit?: Prisma.ConsultaOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ConsultaInclude<ExtArgs> | null
  /**
   * Filter, which Consultas to fetch.
   */
  where?: Prisma.ConsultaWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of Consultas to fetch.
   */
  orderBy?: Prisma.ConsultaOrderByWithRelationInput | Prisma.ConsultaOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for listing Consultas.
   */
  cursor?: Prisma.ConsultaWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` Consultas from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` Consultas.
   */
  skip?: number
  distinct?: Prisma.ConsultaScalarFieldEnum | Prisma.ConsultaScalarFieldEnum[]
}

/**
 * Consulta create
 */
export type ConsultaCreateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Consulta
   */
  select?: Prisma.ConsultaSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Consulta
   */
  omit?: Prisma.ConsultaOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ConsultaInclude<ExtArgs> | null
  /**
   * The data needed to create a Consulta.
   */
  data: Prisma.XOR<Prisma.ConsultaCreateInput, Prisma.ConsultaUncheckedCreateInput>
}

/**
 * Consulta createMany
 */
export type ConsultaCreateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to create many Consultas.
   */
  data: Prisma.ConsultaCreateManyInput | Prisma.ConsultaCreateManyInput[]
}

/**
 * Consulta createManyAndReturn
 */
export type ConsultaCreateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Consulta
   */
  select?: Prisma.ConsultaSelectCreateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the Consulta
   */
  omit?: Prisma.ConsultaOmit<ExtArgs> | null
  /**
   * The data used to create many Consultas.
   */
  data: Prisma.ConsultaCreateManyInput | Prisma.ConsultaCreateManyInput[]
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ConsultaIncludeCreateManyAndReturn<ExtArgs> | null
}

/**
 * Consulta update
 */
export type ConsultaUpdateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Consulta
   */
  select?: Prisma.ConsultaSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Consulta
   */
  omit?: Prisma.ConsultaOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ConsultaInclude<ExtArgs> | null
  /**
   * The data needed to update a Consulta.
   */
  data: Prisma.XOR<Prisma.ConsultaUpdateInput, Prisma.ConsultaUncheckedUpdateInput>
  /**
   * Choose, which Consulta to update.
   */
  where: Prisma.ConsultaWhereUniqueInput
}

/**
 * Consulta updateMany
 */
export type ConsultaUpdateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to update Consultas.
   */
  data: Prisma.XOR<Prisma.ConsultaUpdateManyMutationInput, Prisma.ConsultaUncheckedUpdateManyInput>
  /**
   * Filter which Consultas to update
   */
  where?: Prisma.ConsultaWhereInput
  /**
   * Limit how many Consultas to update.
   */
  limit?: number
}

/**
 * Consulta updateManyAndReturn
 */
export type ConsultaUpdateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Consulta
   */
  select?: Prisma.ConsultaSelectUpdateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the Consulta
   */
  omit?: Prisma.ConsultaOmit<ExtArgs> | null
  /**
   * The data used to update Consultas.
   */
  data: Prisma.XOR<Prisma.ConsultaUpdateManyMutationInput, Prisma.ConsultaUncheckedUpdateManyInput>
  /**
   * Filter which Consultas to update
   */
  where?: Prisma.ConsultaWhereInput
  /**
   * Limit how many Consultas to update.
   */
  limit?: number
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ConsultaIncludeUpdateManyAndReturn<ExtArgs> | null
}

/**
 * Consulta upsert
 */
export type ConsultaUpsertArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Consulta
   */
  select?: Prisma.ConsultaSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Consulta
   */
  omit?: Prisma.ConsultaOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ConsultaInclude<ExtArgs> | null
  /**
   * The filter to search for the Consulta to update in case it exists.
   */
  where: Prisma.ConsultaWhereUniqueInput
  /**
   * In case the Consulta found by the `where` argument doesn't exist, create a new Consulta with this data.
   */
  create: Prisma.XOR<Prisma.ConsultaCreateInput, Prisma.ConsultaUncheckedCreateInput>
  /**
   * In case the Consulta was found with the provided `where` argument, update it with this data.
   */
  update: Prisma.XOR<Prisma.ConsultaUpdateInput, Prisma.ConsultaUncheckedUpdateInput>
}

/**
 * Consulta delete
 */
export type ConsultaDeleteArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Consulta
   */
  select?: Prisma.ConsultaSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Consulta
   */
  omit?: Prisma.ConsultaOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ConsultaInclude<ExtArgs> | null
  /**
   * Filter which Consulta to delete.
   */
  where: Prisma.ConsultaWhereUniqueInput
}

/**
 * Consulta deleteMany
 */
export type ConsultaDeleteManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which Consultas to delete
   */
  where?: Prisma.ConsultaWhereInput
  /**
   * Limit how many Consultas to delete.
   */
  limit?: number
}

/**
 * Consulta.aluno
 */
export type Consulta$alunoArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Aluno
   */
  select?: Prisma.AlunoSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Aluno
   */
  omit?: Prisma.AlunoOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.AlunoInclude<ExtArgs> | null
  where?: Prisma.AlunoWhereInput
}

/**
 * Consulta without action
 */
export type ConsultaDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Consulta
   */
  select?: Prisma.ConsultaSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Consulta
   */
  omit?: Prisma.ConsultaOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ConsultaInclude<ExtArgs> | null
}
