
/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
// @ts-nocheck 
/*
 * This file exports the `Horario` model and its related types.
 *
 * ðŸŸ¢ You can import this file directly.
 */
import type * as runtime from "@prisma/client/runtime/library"
import type * as $Enums from "../enums.ts"
import type * as Prisma from "../internal/prismaNamespace.ts"

/**
 * Model Horario
 * 
 */
export type HorarioModel = runtime.Types.Result.DefaultSelection<Prisma.$HorarioPayload>

export type AggregateHorario = {
  _count: HorarioCountAggregateOutputType | null
  _avg: HorarioAvgAggregateOutputType | null
  _sum: HorarioSumAggregateOutputType | null
  _min: HorarioMinAggregateOutputType | null
  _max: HorarioMaxAggregateOutputType | null
}

export type HorarioAvgAggregateOutputType = {
  id: number | null
  status: number | null
}

export type HorarioSumAggregateOutputType = {
  id: number | null
  status: number | null
}

export type HorarioMinAggregateOutputType = {
  id: number | null
  comeco: Date | null
  fim: Date | null
  status: number | null
}

export type HorarioMaxAggregateOutputType = {
  id: number | null
  comeco: Date | null
  fim: Date | null
  status: number | null
}

export type HorarioCountAggregateOutputType = {
  id: number
  comeco: number
  fim: number
  status: number
  _all: number
}


export type HorarioAvgAggregateInputType = {
  id?: true
  status?: true
}

export type HorarioSumAggregateInputType = {
  id?: true
  status?: true
}

export type HorarioMinAggregateInputType = {
  id?: true
  comeco?: true
  fim?: true
  status?: true
}

export type HorarioMaxAggregateInputType = {
  id?: true
  comeco?: true
  fim?: true
  status?: true
}

export type HorarioCountAggregateInputType = {
  id?: true
  comeco?: true
  fim?: true
  status?: true
  _all?: true
}

export type HorarioAggregateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which Horario to aggregate.
   */
  where?: Prisma.HorarioWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of Horarios to fetch.
   */
  orderBy?: Prisma.HorarioOrderByWithRelationInput | Prisma.HorarioOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the start position
   */
  cursor?: Prisma.HorarioWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` Horarios from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` Horarios.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Count returned Horarios
  **/
  _count?: true | HorarioCountAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to average
  **/
  _avg?: HorarioAvgAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to sum
  **/
  _sum?: HorarioSumAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the minimum value
  **/
  _min?: HorarioMinAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the maximum value
  **/
  _max?: HorarioMaxAggregateInputType
}

export type GetHorarioAggregateType<T extends HorarioAggregateArgs> = {
      [P in keyof T & keyof AggregateHorario]: P extends '_count' | 'count'
    ? T[P] extends true
      ? number
      : Prisma.GetScalarType<T[P], AggregateHorario[P]>
    : Prisma.GetScalarType<T[P], AggregateHorario[P]>
}




export type HorarioGroupByArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.HorarioWhereInput
  orderBy?: Prisma.HorarioOrderByWithAggregationInput | Prisma.HorarioOrderByWithAggregationInput[]
  by: Prisma.HorarioScalarFieldEnum[] | Prisma.HorarioScalarFieldEnum
  having?: Prisma.HorarioScalarWhereWithAggregatesInput
  take?: number
  skip?: number
  _count?: HorarioCountAggregateInputType | true
  _avg?: HorarioAvgAggregateInputType
  _sum?: HorarioSumAggregateInputType
  _min?: HorarioMinAggregateInputType
  _max?: HorarioMaxAggregateInputType
}

export type HorarioGroupByOutputType = {
  id: number
  comeco: Date
  fim: Date
  status: number
  _count: HorarioCountAggregateOutputType | null
  _avg: HorarioAvgAggregateOutputType | null
  _sum: HorarioSumAggregateOutputType | null
  _min: HorarioMinAggregateOutputType | null
  _max: HorarioMaxAggregateOutputType | null
}

type GetHorarioGroupByPayload<T extends HorarioGroupByArgs> = Prisma.PrismaPromise<
  Array<
    Prisma.PickEnumerable<HorarioGroupByOutputType, T['by']> &
      {
        [P in ((keyof T) & (keyof HorarioGroupByOutputType))]: P extends '_count'
          ? T[P] extends boolean
            ? number
            : Prisma.GetScalarType<T[P], HorarioGroupByOutputType[P]>
          : Prisma.GetScalarType<T[P], HorarioGroupByOutputType[P]>
      }
    >
  >



export type HorarioWhereInput = {
  AND?: Prisma.HorarioWhereInput | Prisma.HorarioWhereInput[]
  OR?: Prisma.HorarioWhereInput[]
  NOT?: Prisma.HorarioWhereInput | Prisma.HorarioWhereInput[]
  id?: Prisma.IntFilter<"Horario"> | number
  comeco?: Prisma.DateTimeFilter<"Horario"> | Date | string
  fim?: Prisma.DateTimeFilter<"Horario"> | Date | string
  status?: Prisma.IntFilter<"Horario"> | number
  Consulta?: Prisma.ConsultaListRelationFilter
}

export type HorarioOrderByWithRelationInput = {
  id?: Prisma.SortOrder
  comeco?: Prisma.SortOrder
  fim?: Prisma.SortOrder
  status?: Prisma.SortOrder
  Consulta?: Prisma.ConsultaOrderByRelationAggregateInput
}

export type HorarioWhereUniqueInput = Prisma.AtLeast<{
  id?: number
  AND?: Prisma.HorarioWhereInput | Prisma.HorarioWhereInput[]
  OR?: Prisma.HorarioWhereInput[]
  NOT?: Prisma.HorarioWhereInput | Prisma.HorarioWhereInput[]
  comeco?: Prisma.DateTimeFilter<"Horario"> | Date | string
  fim?: Prisma.DateTimeFilter<"Horario"> | Date | string
  status?: Prisma.IntFilter<"Horario"> | number
  Consulta?: Prisma.ConsultaListRelationFilter
}, "id">

export type HorarioOrderByWithAggregationInput = {
  id?: Prisma.SortOrder
  comeco?: Prisma.SortOrder
  fim?: Prisma.SortOrder
  status?: Prisma.SortOrder
  _count?: Prisma.HorarioCountOrderByAggregateInput
  _avg?: Prisma.HorarioAvgOrderByAggregateInput
  _max?: Prisma.HorarioMaxOrderByAggregateInput
  _min?: Prisma.HorarioMinOrderByAggregateInput
  _sum?: Prisma.HorarioSumOrderByAggregateInput
}

export type HorarioScalarWhereWithAggregatesInput = {
  AND?: Prisma.HorarioScalarWhereWithAggregatesInput | Prisma.HorarioScalarWhereWithAggregatesInput[]
  OR?: Prisma.HorarioScalarWhereWithAggregatesInput[]
  NOT?: Prisma.HorarioScalarWhereWithAggregatesInput | Prisma.HorarioScalarWhereWithAggregatesInput[]
  id?: Prisma.IntWithAggregatesFilter<"Horario"> | number
  comeco?: Prisma.DateTimeWithAggregatesFilter<"Horario"> | Date | string
  fim?: Prisma.DateTimeWithAggregatesFilter<"Horario"> | Date | string
  status?: Prisma.IntWithAggregatesFilter<"Horario"> | number
}

export type HorarioCreateInput = {
  comeco: Date | string
  fim: Date | string
  status?: number
  Consulta?: Prisma.ConsultaCreateNestedManyWithoutHorarioInput
}

export type HorarioUncheckedCreateInput = {
  id?: number
  comeco: Date | string
  fim: Date | string
  status?: number
  Consulta?: Prisma.ConsultaUncheckedCreateNestedManyWithoutHorarioInput
}

export type HorarioUpdateInput = {
  comeco?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  fim?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  status?: Prisma.IntFieldUpdateOperationsInput | number
  Consulta?: Prisma.ConsultaUpdateManyWithoutHorarioNestedInput
}

export type HorarioUncheckedUpdateInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  comeco?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  fim?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  status?: Prisma.IntFieldUpdateOperationsInput | number
  Consulta?: Prisma.ConsultaUncheckedUpdateManyWithoutHorarioNestedInput
}

export type HorarioCreateManyInput = {
  id?: number
  comeco: Date | string
  fim: Date | string
  status?: number
}

export type HorarioUpdateManyMutationInput = {
  comeco?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  fim?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  status?: Prisma.IntFieldUpdateOperationsInput | number
}

export type HorarioUncheckedUpdateManyInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  comeco?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  fim?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  status?: Prisma.IntFieldUpdateOperationsInput | number
}

export type HorarioCountOrderByAggregateInput = {
  id?: Prisma.SortOrder
  comeco?: Prisma.SortOrder
  fim?: Prisma.SortOrder
  status?: Prisma.SortOrder
}

export type HorarioAvgOrderByAggregateInput = {
  id?: Prisma.SortOrder
  status?: Prisma.SortOrder
}

export type HorarioMaxOrderByAggregateInput = {
  id?: Prisma.SortOrder
  comeco?: Prisma.SortOrder
  fim?: Prisma.SortOrder
  status?: Prisma.SortOrder
}

export type HorarioMinOrderByAggregateInput = {
  id?: Prisma.SortOrder
  comeco?: Prisma.SortOrder
  fim?: Prisma.SortOrder
  status?: Prisma.SortOrder
}

export type HorarioSumOrderByAggregateInput = {
  id?: Prisma.SortOrder
  status?: Prisma.SortOrder
}

export type HorarioScalarRelationFilter = {
  is?: Prisma.HorarioWhereInput
  isNot?: Prisma.HorarioWhereInput
}

export type DateTimeFieldUpdateOperationsInput = {
  set?: Date | string
}

export type HorarioCreateNestedOneWithoutConsultaInput = {
  create?: Prisma.XOR<Prisma.HorarioCreateWithoutConsultaInput, Prisma.HorarioUncheckedCreateWithoutConsultaInput>
  connectOrCreate?: Prisma.HorarioCreateOrConnectWithoutConsultaInput
  connect?: Prisma.HorarioWhereUniqueInput
}

export type HorarioUpdateOneRequiredWithoutConsultaNestedInput = {
  create?: Prisma.XOR<Prisma.HorarioCreateWithoutConsultaInput, Prisma.HorarioUncheckedCreateWithoutConsultaInput>
  connectOrCreate?: Prisma.HorarioCreateOrConnectWithoutConsultaInput
  upsert?: Prisma.HorarioUpsertWithoutConsultaInput
  connect?: Prisma.HorarioWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.HorarioUpdateToOneWithWhereWithoutConsultaInput, Prisma.HorarioUpdateWithoutConsultaInput>, Prisma.HorarioUncheckedUpdateWithoutConsultaInput>
}

export type HorarioCreateWithoutConsultaInput = {
  comeco: Date | string
  fim: Date | string
  status?: number
}

export type HorarioUncheckedCreateWithoutConsultaInput = {
  id?: number
  comeco: Date | string
  fim: Date | string
  status?: number
}

export type HorarioCreateOrConnectWithoutConsultaInput = {
  where: Prisma.HorarioWhereUniqueInput
  create: Prisma.XOR<Prisma.HorarioCreateWithoutConsultaInput, Prisma.HorarioUncheckedCreateWithoutConsultaInput>
}

export type HorarioUpsertWithoutConsultaInput = {
  update: Prisma.XOR<Prisma.HorarioUpdateWithoutConsultaInput, Prisma.HorarioUncheckedUpdateWithoutConsultaInput>
  create: Prisma.XOR<Prisma.HorarioCreateWithoutConsultaInput, Prisma.HorarioUncheckedCreateWithoutConsultaInput>
  where?: Prisma.HorarioWhereInput
}

export type HorarioUpdateToOneWithWhereWithoutConsultaInput = {
  where?: Prisma.HorarioWhereInput
  data: Prisma.XOR<Prisma.HorarioUpdateWithoutConsultaInput, Prisma.HorarioUncheckedUpdateWithoutConsultaInput>
}

export type HorarioUpdateWithoutConsultaInput = {
  comeco?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  fim?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  status?: Prisma.IntFieldUpdateOperationsInput | number
}

export type HorarioUncheckedUpdateWithoutConsultaInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  comeco?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  fim?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  status?: Prisma.IntFieldUpdateOperationsInput | number
}


/**
 * Count Type HorarioCountOutputType
 */

export type HorarioCountOutputType = {
  Consulta: number
}

export type HorarioCountOutputTypeSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  Consulta?: boolean | HorarioCountOutputTypeCountConsultaArgs
}

/**
 * HorarioCountOutputType without action
 */
export type HorarioCountOutputTypeDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the HorarioCountOutputType
   */
  select?: Prisma.HorarioCountOutputTypeSelect<ExtArgs> | null
}

/**
 * HorarioCountOutputType without action
 */
export type HorarioCountOutputTypeCountConsultaArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.ConsultaWhereInput
}


export type HorarioSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  comeco?: boolean
  fim?: boolean
  status?: boolean
  Consulta?: boolean | Prisma.Horario$ConsultaArgs<ExtArgs>
  _count?: boolean | Prisma.HorarioCountOutputTypeDefaultArgs<ExtArgs>
}, ExtArgs["result"]["horario"]>

export type HorarioSelectCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  comeco?: boolean
  fim?: boolean
  status?: boolean
}, ExtArgs["result"]["horario"]>

export type HorarioSelectUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  comeco?: boolean
  fim?: boolean
  status?: boolean
}, ExtArgs["result"]["horario"]>

export type HorarioSelectScalar = {
  id?: boolean
  comeco?: boolean
  fim?: boolean
  status?: boolean
}

export type HorarioOmit<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetOmit<"id" | "comeco" | "fim" | "status", ExtArgs["result"]["horario"]>
export type HorarioInclude<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  Consulta?: boolean | Prisma.Horario$ConsultaArgs<ExtArgs>
  _count?: boolean | Prisma.HorarioCountOutputTypeDefaultArgs<ExtArgs>
}
export type HorarioIncludeCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {}
export type HorarioIncludeUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {}

export type $HorarioPayload<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  name: "Horario"
  objects: {
    Consulta: Prisma.$ConsultaPayload<ExtArgs>[]
  }
  scalars: runtime.Types.Extensions.GetPayloadResult<{
    id: number
    comeco: Date
    fim: Date
    status: number
  }, ExtArgs["result"]["horario"]>
  composites: {}
}

export type HorarioGetPayload<S extends boolean | null | undefined | HorarioDefaultArgs> = runtime.Types.Result.GetResult<Prisma.$HorarioPayload, S>

export type HorarioCountArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> =
  Omit<HorarioFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
    select?: HorarioCountAggregateInputType | true
  }

export interface HorarioDelegate<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Horario'], meta: { name: 'Horario' } }
  /**
   * Find zero or one Horario that matches the filter.
   * @param {HorarioFindUniqueArgs} args - Arguments to find a Horario
   * @example
   * // Get one Horario
   * const horario = await prisma.horario.findUnique({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUnique<T extends HorarioFindUniqueArgs>(args: Prisma.SelectSubset<T, HorarioFindUniqueArgs<ExtArgs>>): Prisma.Prisma__HorarioClient<runtime.Types.Result.GetResult<Prisma.$HorarioPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find one Horario that matches the filter or throw an error with `error.code='P2025'`
   * if no matches were found.
   * @param {HorarioFindUniqueOrThrowArgs} args - Arguments to find a Horario
   * @example
   * // Get one Horario
   * const horario = await prisma.horario.findUniqueOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUniqueOrThrow<T extends HorarioFindUniqueOrThrowArgs>(args: Prisma.SelectSubset<T, HorarioFindUniqueOrThrowArgs<ExtArgs>>): Prisma.Prisma__HorarioClient<runtime.Types.Result.GetResult<Prisma.$HorarioPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first Horario that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {HorarioFindFirstArgs} args - Arguments to find a Horario
   * @example
   * // Get one Horario
   * const horario = await prisma.horario.findFirst({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirst<T extends HorarioFindFirstArgs>(args?: Prisma.SelectSubset<T, HorarioFindFirstArgs<ExtArgs>>): Prisma.Prisma__HorarioClient<runtime.Types.Result.GetResult<Prisma.$HorarioPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first Horario that matches the filter or
   * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {HorarioFindFirstOrThrowArgs} args - Arguments to find a Horario
   * @example
   * // Get one Horario
   * const horario = await prisma.horario.findFirstOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirstOrThrow<T extends HorarioFindFirstOrThrowArgs>(args?: Prisma.SelectSubset<T, HorarioFindFirstOrThrowArgs<ExtArgs>>): Prisma.Prisma__HorarioClient<runtime.Types.Result.GetResult<Prisma.$HorarioPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find zero or more Horarios that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {HorarioFindManyArgs} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all Horarios
   * const horarios = await prisma.horario.findMany()
   * 
   * // Get first 10 Horarios
   * const horarios = await prisma.horario.findMany({ take: 10 })
   * 
   * // Only select the `id`
   * const horarioWithIdOnly = await prisma.horario.findMany({ select: { id: true } })
   * 
   */
  findMany<T extends HorarioFindManyArgs>(args?: Prisma.SelectSubset<T, HorarioFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$HorarioPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

  /**
   * Create a Horario.
   * @param {HorarioCreateArgs} args - Arguments to create a Horario.
   * @example
   * // Create one Horario
   * const Horario = await prisma.horario.create({
   *   data: {
   *     // ... data to create a Horario
   *   }
   * })
   * 
   */
  create<T extends HorarioCreateArgs>(args: Prisma.SelectSubset<T, HorarioCreateArgs<ExtArgs>>): Prisma.Prisma__HorarioClient<runtime.Types.Result.GetResult<Prisma.$HorarioPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Create many Horarios.
   * @param {HorarioCreateManyArgs} args - Arguments to create many Horarios.
   * @example
   * // Create many Horarios
   * const horario = await prisma.horario.createMany({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *     
   */
  createMany<T extends HorarioCreateManyArgs>(args?: Prisma.SelectSubset<T, HorarioCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Create many Horarios and returns the data saved in the database.
   * @param {HorarioCreateManyAndReturnArgs} args - Arguments to create many Horarios.
   * @example
   * // Create many Horarios
   * const horario = await prisma.horario.createManyAndReturn({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Create many Horarios and only return the `id`
   * const horarioWithIdOnly = await prisma.horario.createManyAndReturn({
   *   select: { id: true },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  createManyAndReturn<T extends HorarioCreateManyAndReturnArgs>(args?: Prisma.SelectSubset<T, HorarioCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$HorarioPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

  /**
   * Delete a Horario.
   * @param {HorarioDeleteArgs} args - Arguments to delete one Horario.
   * @example
   * // Delete one Horario
   * const Horario = await prisma.horario.delete({
   *   where: {
   *     // ... filter to delete one Horario
   *   }
   * })
   * 
   */
  delete<T extends HorarioDeleteArgs>(args: Prisma.SelectSubset<T, HorarioDeleteArgs<ExtArgs>>): Prisma.Prisma__HorarioClient<runtime.Types.Result.GetResult<Prisma.$HorarioPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Update one Horario.
   * @param {HorarioUpdateArgs} args - Arguments to update one Horario.
   * @example
   * // Update one Horario
   * const horario = await prisma.horario.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  update<T extends HorarioUpdateArgs>(args: Prisma.SelectSubset<T, HorarioUpdateArgs<ExtArgs>>): Prisma.Prisma__HorarioClient<runtime.Types.Result.GetResult<Prisma.$HorarioPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Delete zero or more Horarios.
   * @param {HorarioDeleteManyArgs} args - Arguments to filter Horarios to delete.
   * @example
   * // Delete a few Horarios
   * const { count } = await prisma.horario.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   * 
   */
  deleteMany<T extends HorarioDeleteManyArgs>(args?: Prisma.SelectSubset<T, HorarioDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more Horarios.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {HorarioUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many Horarios
   * const horario = await prisma.horario.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  updateMany<T extends HorarioUpdateManyArgs>(args: Prisma.SelectSubset<T, HorarioUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more Horarios and returns the data updated in the database.
   * @param {HorarioUpdateManyAndReturnArgs} args - Arguments to update many Horarios.
   * @example
   * // Update many Horarios
   * const horario = await prisma.horario.updateManyAndReturn({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Update zero or more Horarios and only return the `id`
   * const horarioWithIdOnly = await prisma.horario.updateManyAndReturn({
   *   select: { id: true },
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  updateManyAndReturn<T extends HorarioUpdateManyAndReturnArgs>(args: Prisma.SelectSubset<T, HorarioUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$HorarioPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

  /**
   * Create or update one Horario.
   * @param {HorarioUpsertArgs} args - Arguments to update or create a Horario.
   * @example
   * // Update or create a Horario
   * const horario = await prisma.horario.upsert({
   *   create: {
   *     // ... data to create a Horario
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the Horario we want to update
   *   }
   * })
   */
  upsert<T extends HorarioUpsertArgs>(args: Prisma.SelectSubset<T, HorarioUpsertArgs<ExtArgs>>): Prisma.Prisma__HorarioClient<runtime.Types.Result.GetResult<Prisma.$HorarioPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


  /**
   * Count the number of Horarios.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {HorarioCountArgs} args - Arguments to filter Horarios to count.
   * @example
   * // Count the number of Horarios
   * const count = await prisma.horario.count({
   *   where: {
   *     // ... the filter for the Horarios we want to count
   *   }
   * })
  **/
  count<T extends HorarioCountArgs>(
    args?: Prisma.Subset<T, HorarioCountArgs>,
  ): Prisma.PrismaPromise<
    T extends runtime.Types.Utils.Record<'select', any>
      ? T['select'] extends true
        ? number
        : Prisma.GetScalarType<T['select'], HorarioCountAggregateOutputType>
      : number
  >

  /**
   * Allows you to perform aggregations operations on a Horario.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {HorarioAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
   * @example
   * // Ordered by age ascending
   * // Where email contains prisma.io
   * // Limited to the 10 users
   * const aggregations = await prisma.user.aggregate({
   *   _avg: {
   *     age: true,
   *   },
   *   where: {
   *     email: {
   *       contains: "prisma.io",
   *     },
   *   },
   *   orderBy: {
   *     age: "asc",
   *   },
   *   take: 10,
   * })
  **/
  aggregate<T extends HorarioAggregateArgs>(args: Prisma.Subset<T, HorarioAggregateArgs>): Prisma.PrismaPromise<GetHorarioAggregateType<T>>

  /**
   * Group by Horario.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {HorarioGroupByArgs} args - Group by arguments.
   * @example
   * // Group by city, order by createdAt, get count
   * const result = await prisma.user.groupBy({
   *   by: ['city', 'createdAt'],
   *   orderBy: {
   *     createdAt: true
   *   },
   *   _count: {
   *     _all: true
   *   },
   * })
   * 
  **/
  groupBy<
    T extends HorarioGroupByArgs,
    HasSelectOrTake extends Prisma.Or<
      Prisma.Extends<'skip', Prisma.Keys<T>>,
      Prisma.Extends<'take', Prisma.Keys<T>>
    >,
    OrderByArg extends Prisma.True extends HasSelectOrTake
      ? { orderBy: HorarioGroupByArgs['orderBy'] }
      : { orderBy?: HorarioGroupByArgs['orderBy'] },
    OrderFields extends Prisma.ExcludeUnderscoreKeys<Prisma.Keys<Prisma.MaybeTupleToUnion<T['orderBy']>>>,
    ByFields extends Prisma.MaybeTupleToUnion<T['by']>,
    ByValid extends Prisma.Has<ByFields, OrderFields>,
    HavingFields extends Prisma.GetHavingFields<T['having']>,
    HavingValid extends Prisma.Has<ByFields, HavingFields>,
    ByEmpty extends T['by'] extends never[] ? Prisma.True : Prisma.False,
    InputErrors extends ByEmpty extends Prisma.True
    ? `Error: "by" must not be empty.`
    : HavingValid extends Prisma.False
    ? {
        [P in HavingFields]: P extends ByFields
          ? never
          : P extends string
          ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
          : [
              Error,
              'Field ',
              P,
              ` in "having" needs to be provided in "by"`,
            ]
      }[HavingFields]
    : 'take' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "take", you also need to provide "orderBy"'
    : 'skip' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "skip", you also need to provide "orderBy"'
    : ByValid extends Prisma.True
    ? {}
    : {
        [P in OrderFields]: P extends ByFields
          ? never
          : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
      }[OrderFields]
  >(args: Prisma.SubsetIntersection<T, HorarioGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetHorarioGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
/**
 * Fields of the Horario model
 */
readonly fields: HorarioFieldRefs;
}

/**
 * The delegate class that acts as a "Promise-like" for Horario.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export interface Prisma__HorarioClient<T, Null = never, ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
  readonly [Symbol.toStringTag]: "PrismaPromise"
  Consulta<T extends Prisma.Horario$ConsultaArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.Horario$ConsultaArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$ConsultaPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): runtime.Types.Utils.JsPromise<TResult1 | TResult2>
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): runtime.Types.Utils.JsPromise<T | TResult>
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): runtime.Types.Utils.JsPromise<T>
}




/**
 * Fields of the Horario model
 */
export interface HorarioFieldRefs {
  readonly id: Prisma.FieldRef<"Horario", 'Int'>
  readonly comeco: Prisma.FieldRef<"Horario", 'DateTime'>
  readonly fim: Prisma.FieldRef<"Horario", 'DateTime'>
  readonly status: Prisma.FieldRef<"Horario", 'Int'>
}
    

// Custom InputTypes
/**
 * Horario findUnique
 */
export type HorarioFindUniqueArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Horario
   */
  select?: Prisma.HorarioSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Horario
   */
  omit?: Prisma.HorarioOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.HorarioInclude<ExtArgs> | null
  /**
   * Filter, which Horario to fetch.
   */
  where: Prisma.HorarioWhereUniqueInput
}

/**
 * Horario findUniqueOrThrow
 */
export type HorarioFindUniqueOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Horario
   */
  select?: Prisma.HorarioSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Horario
   */
  omit?: Prisma.HorarioOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.HorarioInclude<ExtArgs> | null
  /**
   * Filter, which Horario to fetch.
   */
  where: Prisma.HorarioWhereUniqueInput
}

/**
 * Horario findFirst
 */
export type HorarioFindFirstArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Horario
   */
  select?: Prisma.HorarioSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Horario
   */
  omit?: Prisma.HorarioOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.HorarioInclude<ExtArgs> | null
  /**
   * Filter, which Horario to fetch.
   */
  where?: Prisma.HorarioWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of Horarios to fetch.
   */
  orderBy?: Prisma.HorarioOrderByWithRelationInput | Prisma.HorarioOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for Horarios.
   */
  cursor?: Prisma.HorarioWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` Horarios from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` Horarios.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of Horarios.
   */
  distinct?: Prisma.HorarioScalarFieldEnum | Prisma.HorarioScalarFieldEnum[]
}

/**
 * Horario findFirstOrThrow
 */
export type HorarioFindFirstOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Horario
   */
  select?: Prisma.HorarioSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Horario
   */
  omit?: Prisma.HorarioOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.HorarioInclude<ExtArgs> | null
  /**
   * Filter, which Horario to fetch.
   */
  where?: Prisma.HorarioWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of Horarios to fetch.
   */
  orderBy?: Prisma.HorarioOrderByWithRelationInput | Prisma.HorarioOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for Horarios.
   */
  cursor?: Prisma.HorarioWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` Horarios from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` Horarios.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of Horarios.
   */
  distinct?: Prisma.HorarioScalarFieldEnum | Prisma.HorarioScalarFieldEnum[]
}

/**
 * Horario findMany
 */
export type HorarioFindManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Horario
   */
  select?: Prisma.HorarioSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Horario
   */
  omit?: Prisma.HorarioOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.HorarioInclude<ExtArgs> | null
  /**
   * Filter, which Horarios to fetch.
   */
  where?: Prisma.HorarioWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of Horarios to fetch.
   */
  orderBy?: Prisma.HorarioOrderByWithRelationInput | Prisma.HorarioOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for listing Horarios.
   */
  cursor?: Prisma.HorarioWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` Horarios from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` Horarios.
   */
  skip?: number
  distinct?: Prisma.HorarioScalarFieldEnum | Prisma.HorarioScalarFieldEnum[]
}

/**
 * Horario create
 */
export type HorarioCreateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Horario
   */
  select?: Prisma.HorarioSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Horario
   */
  omit?: Prisma.HorarioOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.HorarioInclude<ExtArgs> | null
  /**
   * The data needed to create a Horario.
   */
  data: Prisma.XOR<Prisma.HorarioCreateInput, Prisma.HorarioUncheckedCreateInput>
}

/**
 * Horario createMany
 */
export type HorarioCreateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to create many Horarios.
   */
  data: Prisma.HorarioCreateManyInput | Prisma.HorarioCreateManyInput[]
}

/**
 * Horario createManyAndReturn
 */
export type HorarioCreateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Horario
   */
  select?: Prisma.HorarioSelectCreateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the Horario
   */
  omit?: Prisma.HorarioOmit<ExtArgs> | null
  /**
   * The data used to create many Horarios.
   */
  data: Prisma.HorarioCreateManyInput | Prisma.HorarioCreateManyInput[]
}

/**
 * Horario update
 */
export type HorarioUpdateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Horario
   */
  select?: Prisma.HorarioSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Horario
   */
  omit?: Prisma.HorarioOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.HorarioInclude<ExtArgs> | null
  /**
   * The data needed to update a Horario.
   */
  data: Prisma.XOR<Prisma.HorarioUpdateInput, Prisma.HorarioUncheckedUpdateInput>
  /**
   * Choose, which Horario to update.
   */
  where: Prisma.HorarioWhereUniqueInput
}

/**
 * Horario updateMany
 */
export type HorarioUpdateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to update Horarios.
   */
  data: Prisma.XOR<Prisma.HorarioUpdateManyMutationInput, Prisma.HorarioUncheckedUpdateManyInput>
  /**
   * Filter which Horarios to update
   */
  where?: Prisma.HorarioWhereInput
  /**
   * Limit how many Horarios to update.
   */
  limit?: number
}

/**
 * Horario updateManyAndReturn
 */
export type HorarioUpdateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Horario
   */
  select?: Prisma.HorarioSelectUpdateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the Horario
   */
  omit?: Prisma.HorarioOmit<ExtArgs> | null
  /**
   * The data used to update Horarios.
   */
  data: Prisma.XOR<Prisma.HorarioUpdateManyMutationInput, Prisma.HorarioUncheckedUpdateManyInput>
  /**
   * Filter which Horarios to update
   */
  where?: Prisma.HorarioWhereInput
  /**
   * Limit how many Horarios to update.
   */
  limit?: number
}

/**
 * Horario upsert
 */
export type HorarioUpsertArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Horario
   */
  select?: Prisma.HorarioSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Horario
   */
  omit?: Prisma.HorarioOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.HorarioInclude<ExtArgs> | null
  /**
   * The filter to search for the Horario to update in case it exists.
   */
  where: Prisma.HorarioWhereUniqueInput
  /**
   * In case the Horario found by the `where` argument doesn't exist, create a new Horario with this data.
   */
  create: Prisma.XOR<Prisma.HorarioCreateInput, Prisma.HorarioUncheckedCreateInput>
  /**
   * In case the Horario was found with the provided `where` argument, update it with this data.
   */
  update: Prisma.XOR<Prisma.HorarioUpdateInput, Prisma.HorarioUncheckedUpdateInput>
}

/**
 * Horario delete
 */
export type HorarioDeleteArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Horario
   */
  select?: Prisma.HorarioSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Horario
   */
  omit?: Prisma.HorarioOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.HorarioInclude<ExtArgs> | null
  /**
   * Filter which Horario to delete.
   */
  where: Prisma.HorarioWhereUniqueInput
}

/**
 * Horario deleteMany
 */
export type HorarioDeleteManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which Horarios to delete
   */
  where?: Prisma.HorarioWhereInput
  /**
   * Limit how many Horarios to delete.
   */
  limit?: number
}

/**
 * Horario.Consulta
 */
export type Horario$ConsultaArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Consulta
   */
  select?: Prisma.ConsultaSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Consulta
   */
  omit?: Prisma.ConsultaOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ConsultaInclude<ExtArgs> | null
  where?: Prisma.ConsultaWhereInput
  orderBy?: Prisma.ConsultaOrderByWithRelationInput | Prisma.ConsultaOrderByWithRelationInput[]
  cursor?: Prisma.ConsultaWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.ConsultaScalarFieldEnum | Prisma.ConsultaScalarFieldEnum[]
}

/**
 * Horario without action
 */
export type HorarioDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Horario
   */
  select?: Prisma.HorarioSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Horario
   */
  omit?: Prisma.HorarioOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.HorarioInclude<ExtArgs> | null
}
